services:
  traefik:
    networks:
      - default
    image: traefik:latest
    restart: always
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  django:
    environment:
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      STATIC_ROOT: /static
      MEDIA_ROOT: /media
      SECRET_KEY: ${DJANGO_SECRET}
      DATABASE_URL: psql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    networks:
      - db
      - default
    build:
      context: .
    restart: always
    volumes:
      - media:/media
      - static:/static
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.django.tls=true'
      - 'traefik.http.routers.django.entryPoints=websecure'
      - 'traefik.http.routers.django.rule=PathPrefix(`/`)'
      - 'traefik.http.services.django.loadBalancer.server.port=80'
      - 'traefik.http.services.django.loadBalancer.passHostHeader=true'
      - 'traefik.docker.network=kc_django_default'
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - media:/usr/share/nginx/html/media
      - static:/usr/share/nginx/html/static
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nginx.tls=true'
      - 'traefik.http.routers.nginx.entryPoints=websecure'
      - 'traefik.http.routers.nginx.rule=PathPrefix(`/static`) || PathPrefix(`/media`)'
      - 'traefik.http.services.nginx.loadBalancer.server.port=80'
      - 'traefik.http.services.nginx.loadBalancer.passHostHeader=true'
      - 'traefik.docker.network=kc_django_default'
  db:
    image: postgres:14.0-bullseye
    networks:
      - db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db:/var/lib/postgresql/data/

volumes:
  db:
  media:
  static:


networks:
  default:
  db:
